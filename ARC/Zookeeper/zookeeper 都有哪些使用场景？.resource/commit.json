{"compress":true,"commitItems":[["639419fb-1021-44a2-9443-d7d7acb0c9a9",1571735424186,"",[[1571735365616,["Administrator@zhrb",[[1,0,"zookeeper 都有哪些使用场景？\n\n## [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#%E9%9D%A2%E8%AF%95%E5%AE%98%E5%BF%83%E7%90%86%E5%88%86%E6%9E%90)面试官心理分析\n\n现在聊的 topic 是分布式系统，面试官跟你聊完了 dubbo 相关的一些问题之后，已经确认你对分布式服务框架/RPC框架基本都有一些认知了。那么他可能开始要跟你聊分布式相关的其它问题了。\n\n分布式锁这个东西，很常用的，你做 Java 系统开发，分布式系统，可能会有一些场景会用到。最常用的分布式锁就是基于 zookeeper 来实现的。\n\n其实说实话，问这个问题，一般就是看看你是否了解 zookeeper，因为 zookeeper 是分布式系统中很常见的一个基础系统。而且问的话常问的就是说 zookeeper 的使用场景是什么？看你知道不知道一些基本的使用场景。但是其实 zookeeper 挖深了自然是可以问的很深很深的。\n\n## [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#%E9%9D%A2%E8%AF%95%E9%A2%98%E5%89%96%E6%9E%90)面试题剖析\n\n大致来说，zookeeper 的使用场景如下，我就举几个简单的，大家能说几个就好了：\n\n*   分布式协调\n*   分布式锁\n*   元数据/配置信息管理\n*   HA高可用性\n\n### [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83)分布式协调\n\n这个其实是 zookeeper 很经典的一个用法，简单来说，就好比，你 A 系统发送个请求到 mq，然后 B 系统消息消费之后处理了。那 A 系统如何知道 B 系统的处理结果？用 zookeeper 就可以实现分布式系统之间的协调工作。A 系统发送请求之后可以在 zookeeper 上**对某个节点的值注册个监听器**，一旦 B 系统处理完了就修改 zookeeper 那个节点的值，A 系统立马就可以收到通知，完美解决。\n\n[![zookeeper-distributed-coordination](https://github.com/doocs/advanced-java/raw/master/images/zookeeper-distributed-coordination.png)](https://github.com/doocs/advanced-java/blob/master/images/zookeeper-distributed-coordination.png)\n\n### [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81)分布式锁\n\n举个栗子。对某一个数据连续发出两个修改操作，两台机器同时收到了请求，但是只能一台机器先执行完另外一个机器再执行。那么此时就可以使用 zookeeper 分布式锁，一个机器接收到了请求之后先获取 zookeeper 上的一把分布式锁，就是可以去创建一个 znode，接着执行操作；然后另外一个机器也**尝试去创建**那个 znode，结果发现自己创建不了，因为被别人创建了，那只能等着，等第一个机器执行完了自己再执行。\n\n[![zookeeper-distributed-lock-demo](https://github.com/doocs/advanced-java/raw/master/images/zookeeper-distributed-lock-demo.png)](https://github.com/doocs/advanced-java/blob/master/images/zookeeper-distributed-lock-demo.png)\n\n### [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#%E5%85%83%E6%95%B0%E6%8D%AE%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86)元数据/配置信息管理\n\nzookeeper 可以用作很多系统的配置信息的管理，比如 kafka、storm 等等很多分布式系统都会选用 zookeeper 来做一些元数据、配置信息的管理，包括 dubbo 注册中心不也支持 zookeeper 么？\n\n[![zookeeper-meta-data-manage](https://github.com/doocs/advanced-java/raw/master/images/zookeeper-meta-data-manage.png)](https://github.com/doocs/advanced-java/blob/master/images/zookeeper-meta-data-manage.png)\n\n### [](https://github.com/doocs/advanced-java/blob/master/docs/distributed-system/zookeeper-application-scenarios.md#ha%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7)HA高可用性\n\n这个应该是很常见的，比如 hadoop、hdfs、yarn 等很多大数据系统，都选择基于 zookeeper 来开发 HA 高可用机制，就是一个**重要进程一般会做主备**两个，主进程挂了立马通过 zookeeper 感知到切换到备用进程。\n\n[![zookeeper-active-standby](https://github.com/doocs/advanced-java/raw/master/images/zookeeper-active-standby.png)](https://github.com/doocs/advanced-java/blob/master/images/zookeeper-active-standby.png)"]],[0,0],[3031,3031]]]],null,"Administrator@zhrb"]]}